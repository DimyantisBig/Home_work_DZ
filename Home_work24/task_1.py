# Определяем класс Stack, представляющий стек (структура данных LIFO — последний вошел, первый вышел)
class Stack:
    def __init__(self):
        # Инициализируем стек как пустой список
        self.items = []

    def isEmpty(self):
        # Проверяем, пуст ли стек, возвращаем True, если он пуст, иначе False
        return self.items == []

    def push(self, item):
        # Добавляем элемент в конец стека
        self.items.append(item)

    def pop(self):
        # Удаляем и возвращаем последний элемент из стека
        # Проверяем, не пуст ли стек перед удалением элемента
        if not self.isEmpty():
            return self.items.pop()  # Удаляем и возвращаем последний элемент
        else:
            return None  # Если стек пустой, возвращаем None

# Определяем функцию для переворачивания строки
def revers_string(input_string):
    # Создаем экземпляр класса Stack для работы с символами строки
    stack = Stack()
    # Итерируемся по каждому символу входной строки
    for char in input_string:
        stack.push(char)  # Добавляем символ в стек
    # Создаем переменную для хранения перевернутой строки
    reversed_string = ""
    # Удаляем символы из стека, пока он не станет пустым
    while not stack.isEmpty():
        reversed_string += stack.pop()  # Добавляем удаленный символ к перевернутой строке
    # Возвращаем перевернутую строку
    return reversed_string



"""Пример использования"""
# Получаем строку от пользователя
input_str = input("Введите строку: ")

# Переворачиваем строку и выводим результат
result = revers_string(input_str)
print("Перевернутая строка:", result)

"""Много сложного!
Требуется повторение пройденного материала!"""